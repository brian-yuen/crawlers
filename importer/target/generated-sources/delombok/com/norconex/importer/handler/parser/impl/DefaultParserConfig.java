// Generated by delombok at Fri Mar 08 16:25:39 MST 2024
/* Copyright 2010-2023 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.importer.handler.parser.impl;

import java.nio.file.Path;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.NonNull;

/**
 * Parser class when no other handlers are specified.
 * The importer uses Apache Tika parser in its own way with default
 * settings common for most senarios.
 * If you want to use and configure Tika yourself, use
 * TikaParser.
 */
public class DefaultParserConfig {
    private Path errorsSaveDir;
    @JsonProperty("ocr")
    private final OcrConfig ocrConfig = new OcrConfig();
    @NonNull
    @JsonProperty("embedded")
    private final EmbeddedConfig embeddedConfig = new EmbeddedConfig();

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public DefaultParserConfig() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Path getErrorsSaveDir() {
        return this.errorsSaveDir;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public OcrConfig getOcrConfig() {
        return this.ocrConfig;
    }

    @NonNull
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public EmbeddedConfig getEmbeddedConfig() {
        return this.embeddedConfig;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public DefaultParserConfig setErrorsSaveDir(final Path errorsSaveDir) {
        this.errorsSaveDir = errorsSaveDir;
        return this;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof DefaultParserConfig)) return false;
        final DefaultParserConfig other = (DefaultParserConfig) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$errorsSaveDir = this.getErrorsSaveDir();
        final java.lang.Object other$errorsSaveDir = other.getErrorsSaveDir();
        if (this$errorsSaveDir == null ? other$errorsSaveDir != null : !this$errorsSaveDir.equals(other$errorsSaveDir)) return false;
        final java.lang.Object this$ocrConfig = this.getOcrConfig();
        final java.lang.Object other$ocrConfig = other.getOcrConfig();
        if (this$ocrConfig == null ? other$ocrConfig != null : !this$ocrConfig.equals(other$ocrConfig)) return false;
        final java.lang.Object this$embeddedConfig = this.getEmbeddedConfig();
        final java.lang.Object other$embeddedConfig = other.getEmbeddedConfig();
        if (this$embeddedConfig == null ? other$embeddedConfig != null : !this$embeddedConfig.equals(other$embeddedConfig)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof DefaultParserConfig;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $errorsSaveDir = this.getErrorsSaveDir();
        result = result * PRIME + ($errorsSaveDir == null ? 43 : $errorsSaveDir.hashCode());
        final java.lang.Object $ocrConfig = this.getOcrConfig();
        result = result * PRIME + ($ocrConfig == null ? 43 : $ocrConfig.hashCode());
        final java.lang.Object $embeddedConfig = this.getEmbeddedConfig();
        result = result * PRIME + ($embeddedConfig == null ? 43 : $embeddedConfig.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "DefaultParserConfig(errorsSaveDir=" + this.getErrorsSaveDir() + ", ocrConfig=" + this.getOcrConfig() + ", embeddedConfig=" + this.getEmbeddedConfig() + ")";
    }
}
