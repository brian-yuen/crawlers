// Generated by delombok at Fri Mar 08 16:25:39 MST 2024
/* Copyright 2010-2023 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.importer.handler.parser.impl;

public class TikaParserConfig {
    /**
     * The path to a Tika configuration file.
     */
    private String tikaConfigFile;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public TikaParserConfig() {
    }

    /**
     * The path to a Tika configuration file.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getTikaConfigFile() {
        return this.tikaConfigFile;
    }

    /**
     * The path to a Tika configuration file.
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public TikaParserConfig setTikaConfigFile(final String tikaConfigFile) {
        this.tikaConfigFile = tikaConfigFile;
        return this;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof TikaParserConfig)) return false;
        final TikaParserConfig other = (TikaParserConfig) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$tikaConfigFile = this.getTikaConfigFile();
        final java.lang.Object other$tikaConfigFile = other.getTikaConfigFile();
        if (this$tikaConfigFile == null ? other$tikaConfigFile != null : !this$tikaConfigFile.equals(other$tikaConfigFile)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof TikaParserConfig;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $tikaConfigFile = this.getTikaConfigFile();
        result = result * PRIME + ($tikaConfigFile == null ? 43 : $tikaConfigFile.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "TikaParserConfig(tikaConfigFile=" + this.getTikaConfigFile() + ")";
    }
}
