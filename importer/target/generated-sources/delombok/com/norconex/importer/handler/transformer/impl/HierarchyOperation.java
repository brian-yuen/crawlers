// Generated by delombok at Fri Mar 08 16:25:39 MST 2024
/* Copyright 2023 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.importer.handler.transformer.impl;

import com.norconex.commons.lang.map.PropertySetter;

@SuppressWarnings("javadoc")
public class HierarchyOperation {
    private String fromField;
    private String toField;
    private String fromSeparator;
    private String toSeparator;
    /**
     * Gets the property setter to use when a value is set.
     */
    private PropertySetter onSet;
    private boolean keepEmptySegments;
    private boolean regex;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public HierarchyOperation() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getFromField() {
        return this.fromField;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getToField() {
        return this.toField;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getFromSeparator() {
        return this.fromSeparator;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getToSeparator() {
        return this.toSeparator;
    }

    /**
     * Gets the property setter to use when a value is set.
     * @return property setter
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public PropertySetter getOnSet() {
        return this.onSet;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isKeepEmptySegments() {
        return this.keepEmptySegments;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isRegex() {
        return this.regex;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public HierarchyOperation setFromField(final String fromField) {
        this.fromField = fromField;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public HierarchyOperation setToField(final String toField) {
        this.toField = toField;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public HierarchyOperation setFromSeparator(final String fromSeparator) {
        this.fromSeparator = fromSeparator;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public HierarchyOperation setToSeparator(final String toSeparator) {
        this.toSeparator = toSeparator;
        return this;
    }

    /**
     * Gets the property setter to use when a value is set.
     * @param onSet property setter
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public HierarchyOperation setOnSet(final PropertySetter onSet) {
        this.onSet = onSet;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public HierarchyOperation setKeepEmptySegments(final boolean keepEmptySegments) {
        this.keepEmptySegments = keepEmptySegments;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public HierarchyOperation setRegex(final boolean regex) {
        this.regex = regex;
        return this;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof HierarchyOperation)) return false;
        final HierarchyOperation other = (HierarchyOperation) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.isKeepEmptySegments() != other.isKeepEmptySegments()) return false;
        if (this.isRegex() != other.isRegex()) return false;
        final java.lang.Object this$fromField = this.getFromField();
        final java.lang.Object other$fromField = other.getFromField();
        if (this$fromField == null ? other$fromField != null : !this$fromField.equals(other$fromField)) return false;
        final java.lang.Object this$toField = this.getToField();
        final java.lang.Object other$toField = other.getToField();
        if (this$toField == null ? other$toField != null : !this$toField.equals(other$toField)) return false;
        final java.lang.Object this$fromSeparator = this.getFromSeparator();
        final java.lang.Object other$fromSeparator = other.getFromSeparator();
        if (this$fromSeparator == null ? other$fromSeparator != null : !this$fromSeparator.equals(other$fromSeparator)) return false;
        final java.lang.Object this$toSeparator = this.getToSeparator();
        final java.lang.Object other$toSeparator = other.getToSeparator();
        if (this$toSeparator == null ? other$toSeparator != null : !this$toSeparator.equals(other$toSeparator)) return false;
        final java.lang.Object this$onSet = this.getOnSet();
        final java.lang.Object other$onSet = other.getOnSet();
        if (this$onSet == null ? other$onSet != null : !this$onSet.equals(other$onSet)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof HierarchyOperation;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + (this.isKeepEmptySegments() ? 79 : 97);
        result = result * PRIME + (this.isRegex() ? 79 : 97);
        final java.lang.Object $fromField = this.getFromField();
        result = result * PRIME + ($fromField == null ? 43 : $fromField.hashCode());
        final java.lang.Object $toField = this.getToField();
        result = result * PRIME + ($toField == null ? 43 : $toField.hashCode());
        final java.lang.Object $fromSeparator = this.getFromSeparator();
        result = result * PRIME + ($fromSeparator == null ? 43 : $fromSeparator.hashCode());
        final java.lang.Object $toSeparator = this.getToSeparator();
        result = result * PRIME + ($toSeparator == null ? 43 : $toSeparator.hashCode());
        final java.lang.Object $onSet = this.getOnSet();
        result = result * PRIME + ($onSet == null ? 43 : $onSet.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "HierarchyOperation(fromField=" + this.getFromField() + ", toField=" + this.getToField() + ", fromSeparator=" + this.getFromSeparator() + ", toSeparator=" + this.getToSeparator() + ", onSet=" + this.getOnSet() + ", keepEmptySegments=" + this.isKeepEmptySegments() + ", regex=" + this.isRegex() + ")";
    }
}
