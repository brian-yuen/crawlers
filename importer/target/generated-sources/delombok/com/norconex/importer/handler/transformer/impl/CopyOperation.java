// Generated by delombok at Fri Mar 08 16:25:39 MST 2024
/* Copyright 2023 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.importer.handler.transformer.impl;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.norconex.commons.lang.map.PropertySetter;
import com.norconex.commons.lang.text.TextMatcher;
import lombok.NonNull;

public final class CopyOperation {
    /**
     * One or more source field to copy to target field. If omitted,
     * the entire document body is copied (use with care).
     */
    private final TextMatcher fieldMatcher = new TextMatcher();
    private final String toField;
    private final PropertySetter onSet;

    private CopyOperation(TextMatcher fieldMatcher, String toField, PropertySetter onSet) {
        this.fieldMatcher.copyFrom(fieldMatcher);
        this.toField = toField;
        this.onSet = onSet;
    }

    public static CopyOperation of(@NonNull String toField) {
        java.util.Objects.requireNonNull(toField, "toField is marked non-null but is null");
        return of(null, toField, null);
    }

    public static CopyOperation of(TextMatcher fieldMatcher, @NonNull String toField) {
        java.util.Objects.requireNonNull(toField, "toField is marked non-null but is null");
        return of(fieldMatcher, toField, null);
    }

    @JsonCreator
    public static CopyOperation of(@JsonProperty("fieldMatcher") TextMatcher fieldMatcher, @JsonProperty("toField") @NonNull String toField, @JsonProperty("onSet") PropertySetter onSet) {
        java.util.Objects.requireNonNull(toField, "toField is marked non-null but is null");
        return new CopyOperation(fieldMatcher, toField, onSet);
    }

    /**
     * One or more source field to copy to target field. If omitted,
     * the entire document body is copied (use with care).
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public TextMatcher getFieldMatcher() {
        return this.fieldMatcher;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getToField() {
        return this.toField;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public PropertySetter getOnSet() {
        return this.onSet;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof CopyOperation)) return false;
        final CopyOperation other = (CopyOperation) o;
        final java.lang.Object this$fieldMatcher = this.getFieldMatcher();
        final java.lang.Object other$fieldMatcher = other.getFieldMatcher();
        if (this$fieldMatcher == null ? other$fieldMatcher != null : !this$fieldMatcher.equals(other$fieldMatcher)) return false;
        final java.lang.Object this$toField = this.getToField();
        final java.lang.Object other$toField = other.getToField();
        if (this$toField == null ? other$toField != null : !this$toField.equals(other$toField)) return false;
        final java.lang.Object this$onSet = this.getOnSet();
        final java.lang.Object other$onSet = other.getOnSet();
        if (this$onSet == null ? other$onSet != null : !this$onSet.equals(other$onSet)) return false;
        return true;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $fieldMatcher = this.getFieldMatcher();
        result = result * PRIME + ($fieldMatcher == null ? 43 : $fieldMatcher.hashCode());
        final java.lang.Object $toField = this.getToField();
        result = result * PRIME + ($toField == null ? 43 : $toField.hashCode());
        final java.lang.Object $onSet = this.getOnSet();
        result = result * PRIME + ($onSet == null ? 43 : $onSet.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "CopyOperation(fieldMatcher=" + this.getFieldMatcher() + ", toField=" + this.getToField() + ", onSet=" + this.getOnSet() + ")";
    }
}
