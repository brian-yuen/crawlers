name: Check Branch Sync

#name: Create automatic issue
# on:
#   schedule:
#     - cron:  "0 0 * * *"

on:
  push:
    branches:
      - main 

jobs:
  Update-Fork:
    runs-on: ubuntu-latest
    steps:
      - name: checking out code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
          lfs: true
          submodules: true
          clean: false
          fetch-depth: 0

      - name: Extract commit data
        uses: rlespinasse/git-commit-data-action@v1

      - name: Check for synced branches action
        id: check
        uses: MadLadSquad/check-for-synced-branches-action@v1.0.0.3
        with:
          upstream-url: "https://github.com/brian-yuen/crawlers"
          first-branch: new-update-branch
          second-branch: main

      - name: Issue
        if: steps.check.outputs.behind > 0
        uses: JasonEtco/create-an-issue@v2 # Creates an issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/auto-issue-template.md
          update_existing: true
          search_existing: all

# on:
#   push:
#     branches:
#       - main

# jobs:
#   createPullRequest:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           ref: remove-me-branch

#       - name: Make changes to pull request
#         run: date +%s > report.txt

#       - name: Create Pull Request
#         id: cpr
#         uses: peter-evans/create-pull-request@v6
#         with:
#           token: ${{ secrets.PAT }}
#           commit-message: Update report
#           committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
#           author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
#           signoff: false
#           branch: main
#           delete-branch: false
#           title: '[Example] Update report'
#           body: |
#             Update report
#               - Updated with *today's* date
#               - Auto-generated by [create-pull-request][1]
  
#               [1]: https://github.com/peter-evans/create-pull-request
#           labels: autoupdate              
#           assignees: brian-yuen
#           reviewers: brian-yuen       
#           draft: false

# jobs:
#   check-sync:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Install Git
#         run: sudo apt-get install git -y

#       - name: Fetch all branches
#         run: git fetch --all

#       - name: Check branch sync
#         run: |
#           for branch in $(git branch -r --format '%(refname:short)'); do
#             if [[ $branch != *"snyk"* && $branch != *"dependabot"* && $branch != "origin/2.x-branch" && $branch != "origin/3.x-branch" && $branch != "origin/bugfix/unknown-properties" ]]; then
#               git checkout $branch     
#               echo ""
#               echo "working on $branch"
#               echo ""                     
#               if [[ $(git merge-base HEAD origin/main) == $(git rev-parse HEAD) ]]; then
#                 echo "Branch $branch is up to date with main branch"
#                 # Send email to branch owner
#                 # Replace 'send-email-command' with actual command to send email
#                 # Replace 'branch-owner-email' with actual email of branch owner
#                 #send-email-command "Your branch $branch can merge with the main branch, please go ahead and do so." branch-owner-email
#               else
#                 echo "Branch $branch has conflicts with the main branch"
#                 # Send email to branch owner
#                 # Replace 'send-email-command' with actual command to send email
#                 # Replace 'branch-owner-email' with actual email of branch owner
#                 #send-email-command "Your branch $branch has conflicts with the main branch, please resolve the conflict and then sync with the main branch." branch-owner-email
#               fi
#             fi
#           done



# name: Update Branch

# on:
#   push:
#     branches: [main]
    
# permissions: 
#   contents: write

# jobs:
#   sync:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Setup Git User
#         run: |
#           git config user.name "GitHub Action"
#           git config user.email "brian.yuen@norconex.com"

#       - name: Update Branch
#         run: |
#           git checkout main
#           git fetch origin
#           git checkout update-test
#           git pull
#           git merge origin/main
#           git push origin update-test