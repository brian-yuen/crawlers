// Generated by delombok at Fri Mar 08 16:24:35 MST 2024
/* Copyright 2022-2023 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.crawler.core.fetch;

import com.norconex.crawler.core.doc.CrawlDocState;

public class MockFetchResponseImpl implements MockFetchResponse {
    private CrawlDocState crawlDocState;
    private Exception exception;
    private String reasonPhrase;
    private int statusCode;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MockFetchResponseImpl() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public CrawlDocState getCrawlDocState() {
        return this.crawlDocState;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Exception getException() {
        return this.exception;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getReasonPhrase() {
        return this.reasonPhrase;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getStatusCode() {
        return this.statusCode;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MockFetchResponseImpl setCrawlDocState(final CrawlDocState crawlDocState) {
        this.crawlDocState = crawlDocState;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MockFetchResponseImpl setException(final Exception exception) {
        this.exception = exception;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MockFetchResponseImpl setReasonPhrase(final String reasonPhrase) {
        this.reasonPhrase = reasonPhrase;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MockFetchResponseImpl setStatusCode(final int statusCode) {
        this.statusCode = statusCode;
        return this;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof MockFetchResponseImpl)) return false;
        final MockFetchResponseImpl other = (MockFetchResponseImpl) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.getStatusCode() != other.getStatusCode()) return false;
        final java.lang.Object this$crawlDocState = this.getCrawlDocState();
        final java.lang.Object other$crawlDocState = other.getCrawlDocState();
        if (this$crawlDocState == null ? other$crawlDocState != null : !this$crawlDocState.equals(other$crawlDocState)) return false;
        final java.lang.Object this$exception = this.getException();
        final java.lang.Object other$exception = other.getException();
        if (this$exception == null ? other$exception != null : !this$exception.equals(other$exception)) return false;
        final java.lang.Object this$reasonPhrase = this.getReasonPhrase();
        final java.lang.Object other$reasonPhrase = other.getReasonPhrase();
        if (this$reasonPhrase == null ? other$reasonPhrase != null : !this$reasonPhrase.equals(other$reasonPhrase)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof MockFetchResponseImpl;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getStatusCode();
        final java.lang.Object $crawlDocState = this.getCrawlDocState();
        result = result * PRIME + ($crawlDocState == null ? 43 : $crawlDocState.hashCode());
        final java.lang.Object $exception = this.getException();
        result = result * PRIME + ($exception == null ? 43 : $exception.hashCode());
        final java.lang.Object $reasonPhrase = this.getReasonPhrase();
        result = result * PRIME + ($reasonPhrase == null ? 43 : $reasonPhrase.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "MockFetchResponseImpl(crawlDocState=" + this.getCrawlDocState() + ", exception=" + this.getException() + ", reasonPhrase=" + this.getReasonPhrase() + ", statusCode=" + this.getStatusCode() + ")";
    }
}
