// Generated by delombok at Fri Mar 08 16:24:35 MST 2024
/* Copyright 2023 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.crawler.core.store;

import java.util.Optional;
import java.util.Set;
import com.norconex.crawler.core.crawler.Crawler;

public class MockDataStoreEngine implements DataStoreEngine {
    private DataStore<?> dataStore = new MockDataStore<>();

    public MockDataStoreEngine() {
    }

    public MockDataStoreEngine(DataStore<?> dataStore) {
        this.dataStore = dataStore;
    }

    @Override
    public void init(Crawler crawler) {
    }

    @Override
    public boolean clean() {
        return false;
    }

    @Override
    public void close() {
    }

    @SuppressWarnings("unchecked")
    @Override
    public <T> DataStore<T> openStore(String name, Class<? extends T> type) {
        return (DataStore<T>) dataStore;
    }

    @Override
    public boolean dropStore(String name) {
        return false;
    }

    @Override
    public boolean renameStore(DataStore<?> dataStore, String newName) {
        return false;
    }

    @Override
    public Set<String> getStoreNames() {
        return null;
    }

    @Override
    public Optional<Class<?>> getStoreType(String name) {
        return Optional.empty();
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof MockDataStoreEngine)) return false;
        final MockDataStoreEngine other = (MockDataStoreEngine) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$dataStore = this.dataStore;
        final java.lang.Object other$dataStore = other.dataStore;
        if (this$dataStore == null ? other$dataStore != null : !this$dataStore.equals(other$dataStore)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof MockDataStoreEngine;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $dataStore = this.dataStore;
        result = result * PRIME + ($dataStore == null ? 43 : $dataStore.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "MockDataStoreEngine(dataStore=" + this.dataStore + ")";
    }
}
