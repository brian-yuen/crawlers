// Generated by delombok at Fri Mar 08 16:24:33 MST 2024
/* Copyright 2019-2022 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.crawler.core.cli;

import java.nio.file.Path;
import picocli.CommandLine.Command;
import picocli.CommandLine.Option;

/**
 * Export crawl store to specified file.
 */
@Command(name = "storeexport", description = "Export crawl store to specified directory")
public class StoreExportCommand extends AbstractSubCommand {
    @Option(names = {"-d", "-dir"}, description = "Export directory", required = true)
    private Path dir;

    //TODO add format?
    //TODO add compress?
    @Override
    public void runCommand() {
        getCrawlSession().exportDataStore(dir);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof StoreExportCommand)) return false;
        final StoreExportCommand other = (StoreExportCommand) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (!super.equals(o)) return false;
        final java.lang.Object this$dir = this.dir;
        final java.lang.Object other$dir = other.dir;
        if (this$dir == null ? other$dir != null : !this$dir.equals(other$dir)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof StoreExportCommand;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = super.hashCode();
        final java.lang.Object $dir = this.dir;
        result = result * PRIME + ($dir == null ? 43 : $dir.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "StoreExportCommand(super=" + super.toString() + ", dir=" + this.dir + ")";
    }
}
