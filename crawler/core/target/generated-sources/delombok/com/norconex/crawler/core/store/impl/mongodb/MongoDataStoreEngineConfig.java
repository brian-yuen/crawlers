// Generated by delombok at Fri Mar 08 16:24:33 MST 2024
/* Copyright 2021-2022 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.crawler.core.store.impl.mongodb;

/**
 * <p>
 * Data store engine using MongoDB for storing crawl data.
 * </p>
 *
 * {@nx.xml.usage
 * <dataStoreEngine class="MongoDataStoreEngine" />
 *   <connectionString>(MongoDB connection string.)</connectionString>
 * </dataStoreEngine>
 * }
 */
public class MongoDataStoreEngineConfig {
    private String connectionString;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MongoDataStoreEngineConfig() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getConnectionString() {
        return this.connectionString;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public MongoDataStoreEngineConfig setConnectionString(final String connectionString) {
        this.connectionString = connectionString;
        return this;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof MongoDataStoreEngineConfig)) return false;
        final MongoDataStoreEngineConfig other = (MongoDataStoreEngineConfig) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$connectionString = this.getConnectionString();
        final java.lang.Object other$connectionString = other.getConnectionString();
        if (this$connectionString == null ? other$connectionString != null : !this$connectionString.equals(other$connectionString)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof MongoDataStoreEngineConfig;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $connectionString = this.getConnectionString();
        result = result * PRIME + ($connectionString == null ? 43 : $connectionString.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "MongoDataStoreEngineConfig(connectionString=" + this.getConnectionString() + ")";
    }
}
