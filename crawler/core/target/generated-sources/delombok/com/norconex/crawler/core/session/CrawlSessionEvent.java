// Generated by delombok at Fri Mar 08 16:24:33 MST 2024
/* Copyright 2018-2022 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.crawler.core.session;

import com.norconex.commons.lang.event.Event;

/**
 * A crawl session event.
 */
public class CrawlSessionEvent extends Event {
    private static final long serialVersionUID = 1L;
    public static final String CRAWLSESSION_RUN_BEGIN = "CRAWLSESSION_RUN_BEGIN";
    public static final String CRAWLSESSION_RUN_END = "CRAWLSESSION_RUN_END";
    public static final String CRAWLSESSION_STOP_BEGIN = "CRAWLSESSION_STOP_BEGIN";
    public static final String CRAWLSESSION_STOP_END = "CRAWLSESSION_STOP_END";
    public static final String CRAWLSESSION_CLEAN_BEGIN = "CRAWLSESSION_CLEAN_BEGIN";
    public static final String CRAWLSESSION_CLEAN_END = "CRAWLSESSION_CLEAN_END";
    public static final String CRAWLSESSION_STORE_EXPORT_BEGIN = "CRAWLSESSION_STORE_EXPORT_BEGIN";
    public static final String CRAWLSESSION_STORE_EXPORT_END = "CRAWLSESSION_STORE_EXPORT_END";
    public static final String CRAWLSESSION_STORE_IMPORT_BEGIN = "CRAWLSESSION_STORE_IMPORT_BEGIN";
    public static final String CRAWLSESSION_STORE_IMPORT_END = "CRAWLSESSION_STORE_IMPORT_END";
    //TODO Not used. Needed?
    public static final String CRAWLSESSION_ERROR = "CRAWLSESSION_ERROR";

    @Override
    public CrawlSession getSource() {
        return (CrawlSession) super.getSource();
    }

    public boolean isCrawlSessionShutdown() {
        return is(CRAWLSESSION_RUN_END, CRAWLSESSION_ERROR, CRAWLSESSION_STOP_END);
    }

    public static boolean isCrawlSessionShutdown(Event event) {
        if (event == null) {
            return false;
        }
        return event.is(CRAWLSESSION_RUN_END, CRAWLSESSION_ERROR, CRAWLSESSION_STOP_END);
    }


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static abstract class CrawlSessionEventBuilder<C extends CrawlSessionEvent, B extends CrawlSessionEvent.CrawlSessionEventBuilder<C, B>> extends Event.EventBuilder<C, B> {
        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        protected abstract B self();

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public abstract C build();

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "CrawlSessionEvent.CrawlSessionEventBuilder(super=" + super.toString() + ")";
        }
    }


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    private static final class CrawlSessionEventBuilderImpl extends CrawlSessionEvent.CrawlSessionEventBuilder<CrawlSessionEvent, CrawlSessionEvent.CrawlSessionEventBuilderImpl> {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private CrawlSessionEventBuilderImpl() {
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        protected CrawlSessionEvent.CrawlSessionEventBuilderImpl self() {
            return this;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public CrawlSessionEvent build() {
            return new CrawlSessionEvent(this);
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected CrawlSessionEvent(final CrawlSessionEvent.CrawlSessionEventBuilder<?, ?> b) {
        super(b);
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static CrawlSessionEvent.CrawlSessionEventBuilder<?, ?> builder() {
        return new CrawlSessionEvent.CrawlSessionEventBuilderImpl();
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof CrawlSessionEvent)) return false;
        final CrawlSessionEvent other = (CrawlSessionEvent) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (!super.equals(o)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof CrawlSessionEvent;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int result = super.hashCode();
        return result;
    }
}
