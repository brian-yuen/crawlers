// Generated by delombok at Fri Mar 08 16:23:50 MST 2024
/* Copyright 2023 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.committer.core.batch;

import com.norconex.committer.core.BaseCommitterConfig;
import com.norconex.committer.core.batch.queue.CommitterQueue;
import com.norconex.committer.core.batch.queue.impl.FSQueue;

public class BaseBatchCommitterConfig extends BaseCommitterConfig {
    private CommitterQueue queue = new FSQueue();

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public BaseBatchCommitterConfig() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public CommitterQueue getQueue() {
        return this.queue;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public BaseBatchCommitterConfig setQueue(final CommitterQueue queue) {
        this.queue = queue;
        return this;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof BaseBatchCommitterConfig)) return false;
        final BaseBatchCommitterConfig other = (BaseBatchCommitterConfig) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (!super.equals(o)) return false;
        final java.lang.Object this$queue = this.getQueue();
        final java.lang.Object other$queue = other.getQueue();
        if (this$queue == null ? other$queue != null : !this$queue.equals(other$queue)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof BaseBatchCommitterConfig;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = super.hashCode();
        final java.lang.Object $queue = this.getQueue();
        result = result * PRIME + ($queue == null ? 43 : $queue.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "BaseBatchCommitterConfig(super=" + super.toString() + ", queue=" + this.getQueue() + ")";
    }
}
