// Generated by delombok at Fri Mar 08 16:23:53 MST 2024
/* Copyright 2022-2023 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.committer.core;

import java.util.Iterator;
import com.norconex.committer.core.batch.AbstractBatchCommitter;
import com.norconex.committer.core.batch.BaseBatchCommitterConfig;

public class TestBatchCommitter extends AbstractBatchCommitter<BaseBatchCommitterConfig> {
    private final BaseBatchCommitterConfig configuration = new BaseBatchCommitterConfig();

    @Override
    protected void commitBatch(Iterator<CommitterRequest> it) throws CommitterException {
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof TestBatchCommitter)) return false;
        final TestBatchCommitter other = (TestBatchCommitter) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (!super.equals(o)) return false;
        final java.lang.Object this$configuration = this.getConfiguration();
        final java.lang.Object other$configuration = other.getConfiguration();
        if (this$configuration == null ? other$configuration != null : !this$configuration.equals(other$configuration)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof TestBatchCommitter;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = super.hashCode();
        final java.lang.Object $configuration = this.getConfiguration();
        result = result * PRIME + ($configuration == null ? 43 : $configuration.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "TestBatchCommitter(super=" + super.toString() + ", configuration=" + this.getConfiguration() + ")";
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public BaseBatchCommitterConfig getConfiguration() {
        return this.configuration;
    }
}
