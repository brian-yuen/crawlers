// Generated by delombok at Fri Mar 08 16:24:11 MST 2024
/* Copyright 2021-2023 Norconex Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.norconex.committer.neo4j;

import java.io.Serializable;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import com.norconex.committer.core.batch.BaseBatchCommitterConfig;
import com.norconex.commons.lang.collection.CollectionUtil;
import com.norconex.commons.lang.security.Credentials;

/**
 * <p>
 * Neo4j Committer configuration.
 * </p>
 * @author Sylvain Roussy
 * @author Pascal Essiembre
 */
public class Neo4jCommitterConfig extends BaseBatchCommitterConfig implements Serializable {
    private static final long serialVersionUID = 1L;
    public static final String DEFAULT_NEO4J_ID_PROPERTY = "id";
    public static final String DEFAULT_NEO4J_CONTENT_PROPERTY = "content";
    private String uri;
    private String database;
    private final Credentials credentials = new Credentials();
    private String multiValuesJoiner;
    private String nodeIdProperty = DEFAULT_NEO4J_ID_PROPERTY;
    private String nodeContentProperty = DEFAULT_NEO4J_CONTENT_PROPERTY;
    private String upsertCypher;
    private String deleteCypher;
    private final Set<String> optionalParameters = new HashSet<>();

    public void setCredentials(Credentials credentials) {
        this.credentials.copyFrom(credentials);
    }

    public Set<String> getOptionalParameters() {
        return Collections.unmodifiableSet(optionalParameters);
    }

    public void setOptionalParameters(Set<String> optionalParameters) {
        CollectionUtil.setAll(this.optionalParameters, optionalParameters);
    }

    public void addOptionalParameter(String optionalParameter) {
        optionalParameters.add(optionalParameter);
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Neo4jCommitterConfig() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getUri() {
        return this.uri;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getDatabase() {
        return this.database;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Credentials getCredentials() {
        return this.credentials;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getMultiValuesJoiner() {
        return this.multiValuesJoiner;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getNodeIdProperty() {
        return this.nodeIdProperty;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getNodeContentProperty() {
        return this.nodeContentProperty;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getUpsertCypher() {
        return this.upsertCypher;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public String getDeleteCypher() {
        return this.deleteCypher;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Neo4jCommitterConfig setUri(final String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Neo4jCommitterConfig setDatabase(final String database) {
        this.database = database;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Neo4jCommitterConfig setMultiValuesJoiner(final String multiValuesJoiner) {
        this.multiValuesJoiner = multiValuesJoiner;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Neo4jCommitterConfig setNodeIdProperty(final String nodeIdProperty) {
        this.nodeIdProperty = nodeIdProperty;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Neo4jCommitterConfig setNodeContentProperty(final String nodeContentProperty) {
        this.nodeContentProperty = nodeContentProperty;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Neo4jCommitterConfig setUpsertCypher(final String upsertCypher) {
        this.upsertCypher = upsertCypher;
        return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Neo4jCommitterConfig setDeleteCypher(final String deleteCypher) {
        this.deleteCypher = deleteCypher;
        return this;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Neo4jCommitterConfig)) return false;
        final Neo4jCommitterConfig other = (Neo4jCommitterConfig) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (!super.equals(o)) return false;
        final java.lang.Object this$uri = this.getUri();
        final java.lang.Object other$uri = other.getUri();
        if (this$uri == null ? other$uri != null : !this$uri.equals(other$uri)) return false;
        final java.lang.Object this$database = this.getDatabase();
        final java.lang.Object other$database = other.getDatabase();
        if (this$database == null ? other$database != null : !this$database.equals(other$database)) return false;
        final java.lang.Object this$credentials = this.getCredentials();
        final java.lang.Object other$credentials = other.getCredentials();
        if (this$credentials == null ? other$credentials != null : !this$credentials.equals(other$credentials)) return false;
        final java.lang.Object this$multiValuesJoiner = this.getMultiValuesJoiner();
        final java.lang.Object other$multiValuesJoiner = other.getMultiValuesJoiner();
        if (this$multiValuesJoiner == null ? other$multiValuesJoiner != null : !this$multiValuesJoiner.equals(other$multiValuesJoiner)) return false;
        final java.lang.Object this$nodeIdProperty = this.getNodeIdProperty();
        final java.lang.Object other$nodeIdProperty = other.getNodeIdProperty();
        if (this$nodeIdProperty == null ? other$nodeIdProperty != null : !this$nodeIdProperty.equals(other$nodeIdProperty)) return false;
        final java.lang.Object this$nodeContentProperty = this.getNodeContentProperty();
        final java.lang.Object other$nodeContentProperty = other.getNodeContentProperty();
        if (this$nodeContentProperty == null ? other$nodeContentProperty != null : !this$nodeContentProperty.equals(other$nodeContentProperty)) return false;
        final java.lang.Object this$upsertCypher = this.getUpsertCypher();
        final java.lang.Object other$upsertCypher = other.getUpsertCypher();
        if (this$upsertCypher == null ? other$upsertCypher != null : !this$upsertCypher.equals(other$upsertCypher)) return false;
        final java.lang.Object this$deleteCypher = this.getDeleteCypher();
        final java.lang.Object other$deleteCypher = other.getDeleteCypher();
        if (this$deleteCypher == null ? other$deleteCypher != null : !this$deleteCypher.equals(other$deleteCypher)) return false;
        final java.lang.Object this$optionalParameters = this.getOptionalParameters();
        final java.lang.Object other$optionalParameters = other.getOptionalParameters();
        if (this$optionalParameters == null ? other$optionalParameters != null : !this$optionalParameters.equals(other$optionalParameters)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Neo4jCommitterConfig;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = super.hashCode();
        final java.lang.Object $uri = this.getUri();
        result = result * PRIME + ($uri == null ? 43 : $uri.hashCode());
        final java.lang.Object $database = this.getDatabase();
        result = result * PRIME + ($database == null ? 43 : $database.hashCode());
        final java.lang.Object $credentials = this.getCredentials();
        result = result * PRIME + ($credentials == null ? 43 : $credentials.hashCode());
        final java.lang.Object $multiValuesJoiner = this.getMultiValuesJoiner();
        result = result * PRIME + ($multiValuesJoiner == null ? 43 : $multiValuesJoiner.hashCode());
        final java.lang.Object $nodeIdProperty = this.getNodeIdProperty();
        result = result * PRIME + ($nodeIdProperty == null ? 43 : $nodeIdProperty.hashCode());
        final java.lang.Object $nodeContentProperty = this.getNodeContentProperty();
        result = result * PRIME + ($nodeContentProperty == null ? 43 : $nodeContentProperty.hashCode());
        final java.lang.Object $upsertCypher = this.getUpsertCypher();
        result = result * PRIME + ($upsertCypher == null ? 43 : $upsertCypher.hashCode());
        final java.lang.Object $deleteCypher = this.getDeleteCypher();
        result = result * PRIME + ($deleteCypher == null ? 43 : $deleteCypher.hashCode());
        final java.lang.Object $optionalParameters = this.getOptionalParameters();
        result = result * PRIME + ($optionalParameters == null ? 43 : $optionalParameters.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "Neo4jCommitterConfig(super=" + super.toString() + ", uri=" + this.getUri() + ", database=" + this.getDatabase() + ", credentials=" + this.getCredentials() + ", multiValuesJoiner=" + this.getMultiValuesJoiner() + ", nodeIdProperty=" + this.getNodeIdProperty() + ", nodeContentProperty=" + this.getNodeContentProperty() + ", upsertCypher=" + this.getUpsertCypher() + ", deleteCypher=" + this.getDeleteCypher() + ", optionalParameters=" + this.getOptionalParameters() + ")";
    }
}
